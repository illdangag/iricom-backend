plugins {
    id 'java'
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version "${springDependencyManagementVersion}"
    id 'checkstyle' // code convention
    id 'com.gorylenko.gradle-git-properties' version '2.4.1' // git 정보
}

version = '0.2.0'

repositories {
    mavenCentral()
}

dependencies {
    // 상위 프로젝트 의존성
    implementation project(':iricom-core')
    testImplementation(testFixtures(project(':iricom-core')))
    implementation project(':iricom-storage')
    testImplementation(testFixtures(project(':iricom-storage')))

    // spring 의존성
    implementation 'org.springframework.boot:spring-boot-starter-web' // spring MVC를 위한 기본적인 종속, 내장 Tomcat 포함
    implementation 'org.springframework.boot:spring-boot-starter-validation' // annotation 기반의 데이터 검증 자동화

    // 프로젝트 의존성
    compileOnly 'org.projectlombok:lombok' // lombok
    annotationProcessor 'org.projectlombok:lombok' // lombok
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.533' // aws s3

    // 프로젝트 테스트 의존성
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'junit', module: 'junit' // junit 특정 버전을 사용하기 위해서 기본 junit을 포함하지 않도록 함
    }
    testImplementation "org.junit.jupiter:junit-jupiter:5.8.1"
    testCompileOnly 'org.projectlombok:lombok' // lombok
    testAnnotationProcessor 'org.projectlombok:lombok' // lombok
    testImplementation 'com.h2database:h2:2.1.214' // 테스트 환경에서 사용 할 데이터베이스
}

checkstyle { // code convention
    ignoreFailures = true
    configFile = file("../../checkstyle.xml")
    reportsDir = file("${buildDir}/checkstyle-output")
}

test {
    dependsOn checkstyleMain, checkstyleTest

    useJUnitPlatform()
}

bootJar {
    enabled = false
}

jar {
    enabled = true
}
