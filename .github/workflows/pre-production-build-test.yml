# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Build, Test

on:
  push:
    branches: [ "pre-production", "bug/5-build-error-fix" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      minio:
        image: minio/minio:RELEASE.2023-01-20T02-05-44Z.hotfix.e70d789c9
        ports:
          - 9000:9000
        env:
          MINIO_ACCESS_KEY: minio
          MINIO_SECRET_KEY: password
          options: --entrypoint "minio server /data --address=0.0.0.0:9000" --health-cmd "curl -f http://localhost:9000/minio/health/live" --health-interval 10s --health-timeout 5s --health-retries

    steps:
    - uses: actions/checkout@v3

    - name: Wait for MinIO to be ready
      run: |
        echo "Waiting for MinIO to be healthy..."
        for i in {1..10}; do
          if curl -s http://localhost:9000/minio/health/live; then
            echo "MinIO is healthy!"
            break
          fi
        done

    - name: Install MinIO Client (mc)
      run: |
        curl -O https://dl.min.io/client/mc/release/linux-amd64/mc
        chmod +x mc
        sudo mv mc /usr/local/bin/

    - name: Create bucket in MinIO
      run: |
        for i in {1..10}; do
          mc alias set localminio http://localhost:9000 minio password && break
          echo "Waiting for MinIO login..."
          sleep 3
        done
        mc mb localminio/iricom-test || echo "Bucket already exists"
        mc ls localminio

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Make iricom-backend test/resource for JUnit
      run: |
        cd ./src/test/resources
        touch ./firebase-adminsdk.json
        echo "${{ secrets.TEST_FIREBASE_ADMIN_ADK }}" > ./firebase-adminsdk.json
        touch ./application.yml
        echo "${{ secrets.TEST_APPLICATION_YML }}" > ./application.yml
        touch ./application-database.yml
        echo "${{ secrets.TEST_APPLICATION_DATABASE_YML }}" > ./application-database.yml
        touch ./application-storage.yml
        echo "${{ secrets.TEST_APPLICATION_STORAGE_YML }}" > ./application-storage.yml
      shell: bash

    - name: Make iricom-storage test/resource for JUnit
      run: |
        cd ./iricom-storage/src/test/resources
        touch ./firebase-adminsdk.json
        echo "${{ secrets.TEST_FIREBASE_ADMIN_ADK }}" > ./firebase-adminsdk.json
        touch ./application.yml
        echo "${{ secrets.TEST_APPLICATION_YML }}" > ./application.yml
        touch ./application-database.yml
        echo "${{ secrets.TEST_APPLICATION_DATABASE_YML }}" > ./application-database.yml
        touch ./application-storage.yml
        echo "${{ secrets.TEST_APPLICATION_STORAGE_YML }}" > ./application-storage.yml
      shell: bash

    - name: Make iricom-storage/iricom-storage-file test/resource for JUnit
      run: |
        cd ./iricom-storage/iricom-storage-file/src/test/resources
        touch ./firebase-adminsdk.json
        echo "${{ secrets.TEST_FIREBASE_ADMIN_ADK }}" > ./firebase-adminsdk.json
        touch ./application.yml
        echo "${{ secrets.TEST_APPLICATION_YML }}" > ./application.yml
        touch ./application-database.yml
        echo "${{ secrets.TEST_APPLICATION_DATABASE_YML }}" > ./application-database.yml
        touch ./application-storage.yml
        echo "${{ secrets.TEST_APPLICATION_STORAGE_YML }}" > ./application-storage.yml
      shell: bash

    - name: Make iricom-storage/iricom-storage-s3 test/resource for JUnit
      run: |
        cd ./iricom-storage/iricom-storage-s3/src/test/resources
        touch ./firebase-adminsdk.json
        echo "${{ secrets.TEST_FIREBASE_ADMIN_ADK }}" > ./firebase-adminsdk.json
        touch ./application.yml
        echo "${{ secrets.TEST_APPLICATION_YML }}" > ./application.yml
        touch ./application-database.yml
        echo "${{ secrets.TEST_APPLICATION_DATABASE_YML }}" > ./application-database.yml
        touch ./application-storage.yml
        echo "${{ secrets.TEST_APPLICATION_STORAGE_YML }}" > ./application-storage.yml
      shell: bash

    - name: Build with Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: build
